apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-webapp-arm
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 100%
  selector:
    matchLabels:
      app: go-webapp-arm
  template:
    metadata:
      name: go-webapp-arm
      labels:
        app: go-webapp-arm
      annotations:
        isEdgeDeployment: "true"
        targetCondition: "tags.location.building='mobile' AND tags.environment='test'"
        priority: "15"
        loggingOptions: ""
    spec:
      containers:
      - name: go-webapp-arm
        image: REDACTED.azurecr.io/go-webapp-arm:latest
      nodeSelector:
        type: virtual-kubelet
      tolerations:
      - key: virtual-kubelet.io/provider
        operator: Equal
        value: iotedge
        effect: NoSchedule
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: edgeagent
data:
  desiredProperties: |
    {
      "runtime": {
        "settings": {
          "registryCredentials": {
            "docker": {
              "address": "REDACTED",
              "password": "REDACTED",
              "username": "REDACTED"
            }
          }
        }
      },
      "systemModules": {
        "edgeHub": {
          "env": {
            "OptimizeForPerformance": {
              "value": "false"
            }
          }
        }
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: edgehub
data:
  desiredProperties: |
    {
      "routes": {
        "route": "FROM /* INTO $upstream",
      },
      "storeAndForwardConfiguration": {
        "timeToLiveSecs": 7200
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: go-webapp-arm
data:
  status: running
  restartPolicy: always
  version: "1.0"
  createOptions: |
    {
      "HostConfig": {
        "PortBindings": {
          "8080/tcp": [
            {
              "HostPort": "80"
            }
          ]
        }
      }
    }
